name: build
on:
  push:
    branches:
      - main
jobs:
  #build:
  #  runs-on: [self-hosted, public, linux, x64]
  #  steps:
  #    - uses: actions/checkout@v2
  #      name: Checkout repo
  #      with:
  #        fetch-depth: 0
    #  - name: Run yor action
    #    uses: bridgecrewio/yor-action@main
    #  - name: Set up Python ${{ matrix.python-version }}
    #    uses: actions/setup-python@v1
    #    with:
    #      python-version: 3.7
      #- name: Update documentation
      #  run: |
      #    git config --local user.email "action@github.com"
      #    git config --local user.name "GitHub Action"
      #    git fetch --tags
      #    git pull
      #    latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
      #    echo "latest tag: $latest_tag"
      #    new_tag=$(echo $latest_tag | awk -F. -v a="$1" -v b="$2" -v c="$3" '{printf("%d.%d.%d", $1+a, $2+b , $3+1)}')
      #    echo "new tag: $new_tag"

#          pip install -U checkov
#          cat .github/template.md > README.md && checkov -d terraform -o github_failed_only -s >> README.md
#          git add README.md  || echo "No changes to commit"
#          git commit -m "update resource scan result doc" README.md || echo "No changes to commit"
#          git push origin
#          git tag $new_tag
#          git push origin $new_tag

  VeracodeContainer:
    runs-on: ubuntu-latest
    #needs: build
    steps:
      - name : CheckOut test
        uses: actions/checkout@v2

      - uses: jirutka/setup-alpine@v1
        with:
          branch: v3.15
          packages: >
            libc6-compat
            curl

      - name: Run Veracode Container
        env:
          VERACODE_API_KEY_ID: ${{ secrets.VID }}
          VERACODE_API_KEY_SECRET: $${{ secrets.VKEY }}
        run : |
          curl -fsS https://tools.veracode.com/veracode-cli/install | sh
          ./veracode configure
          ./veracode scan --source . --type directory --format table        
        shell: alpine.sh {0}

#export VERACODE_API_KEY_ID = ${{ secrets.VID }}
#export VERACODE_API_KEY_SECRET = $${{ secrets.VKEY }}